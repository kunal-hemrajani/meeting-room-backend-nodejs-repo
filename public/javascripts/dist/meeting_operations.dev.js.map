{"version":3,"sources":["meeting_operations.js"],"names":["express","require","dbConnection","app","http","bodyParser","use","json","mysql","dbConn","createConnection","req","res","next","header","post","console","log","body","date","sql","query","agenda","name","start_time","end_time","room_id","err","result","id","sqlNext","resultNext","listen"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst dbConnection = require('./db_connection');\r\nconst app = express();\r\nvar http = require('http');\r\nconst bodyParser = require(\"body-parser\");\r\napp.use(express.json());\r\n// app.use(bodyParser.urlencoded({ extended: true }));\r\nvar mysql = require('mysql');\r\n\r\nvar dbConn = mysql.createConnection(dbConnection);\r\napp.use(function(req, res, next) {\r\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n    next();\r\n});\r\n\r\napp.post('/insert_meeting', (req, res) => {\r\n    console.log(req.body.date);\r\n    var sql = \"INSERT INTO meeting SET ? \";\r\n    dbConn.query(sql, {\r\n        agenda: req.body.agenda,\r\n        name: req.body.name,\r\n        date: req.body.date,\r\n        start_time: req.body.start_time,\r\n        end_time: req.body.end_time,\r\n        room_id: req.body.room_id,\r\n    }, function(err, result) {\r\n        if (err) throw err;\r\n        res.json({\r\n            'msg': 'Added successfully!'\r\n        });\r\n    });\r\n});\r\n\r\napp.post('/check_availability', (req, res) => {\r\n    console.log(req.body);\r\n    var sql = \"SELECT * FROM meeting WHERE room_id = ? \";\r\n    dbConn.query(sql, [req.body.room_id], function(err, result) {\r\n        if (err) throw err;\r\n        console.log(result);\r\n        res.json({\r\n            'msg': 'Success!',\r\n            'response': result\r\n        });\r\n    });\r\n});\r\n\r\napp.post('/delete_meeting', (req, res) => {\r\n    var sql = \"DELETE FROM meeting WHERE id = ?\";\r\n    dbConn.query(sql, [req.body.id], function(err, result) {\r\n        if (err) throw err;\r\n        res.json({\r\n            'msg': 'Success!',\r\n        });\r\n    });\r\n});\r\n\r\napp.post('/get_rooms', (req, res) => {\r\n    var sqlNext = \"SELECT * FROM meeting WHERE room_id = ?\";\r\n    dbConn.query(sqlNext, [req.body.id], function(err, resultNext) {\r\n        if (err) throw err;\r\n        res.json({\r\n            'msg': 'Success!',\r\n            'response': resultNext\r\n        });\r\n    });\r\n    // var sql = \"SELECT * FROM rooms\";\r\n    // var obj = [];\r\n    // dbConn.query(sql, [], function(err, result) {\r\n    //     if (err) throw err;\r\n    //     const resData = result;\r\n    //     resData.forEach(async(element) => {\r\n    //         var sqlNext = \"SELECT * FROM meeting WHERE room_id = ?\";\r\n    //         dbConn.query(sqlNext, [element.id], function(err, resultNext) {\r\n    //             if (err) throw err;\r\n    //             element['meetings'] = resultNext;\r\n    //             console.log('line68')\r\n    //         });\r\n    //     });\r\n    //     res.json({\r\n    //         'msg': 'Success!',\r\n    //         'response': resData\r\n    //     });\r\n    //     console.log('line72')\r\n    // });\r\n});\r\n\r\n\r\napp.listen('8080', () => console.log(`Example app listening on port 8080!`))"],"file":"meeting_operations.dev.js"}